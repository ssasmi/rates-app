{"version":3,"sources":["redux/favoriteCurrency/action.js","redux/favoriteCurrency/types.js","componentsHelper/CurrencyValue/CurrencyValue.jsx","components/CurrencyList/CurrencyList.jsx","redux/exchangeCurrency/actions.js","redux/exchangeCurrency/types.js","components/FavoriteCurrency/FavoriteCurrency.jsx","pages/CurrencyConvertorPage/CurrencyConvertorPage.jsx","components/ExchangeInput/ExchangeInput.jsx","components/ExchangeSelectCurrency/ExchangeSelectCurrency.jsx","components/ExchangeBlock/ExchangeBlock.jsx","pages/ExchangeRatePage/ExchangeRatePage.jsx","pages/ErrorPage/ErrorPage.jsx","App.jsx","redux/Currency/action.js","redux/Currency/types.js","redux/Currency/reducer.js","redux/favoriteCurrency/reducer.js","redux/exchangeCurrency/reducer.js","redux/rootReducer.js","redux/store.js","index.js","App.module.css","components/ExchangeSelectCurrency/ExchangeSelectCurrency.module.css","componentsHelper/CurrencyValue/CurrencyValue.module.css","components/FavoriteCurrency/FavoriteCurrency.module.css","pages/ExchangeRatePage/ExchangeRatePage.module.css","components/ExchangeBlock/ExchangeBlock.module.css","components/ExchangeInput/ExchangeInput.module.css"],"names":["setFavoriteCurrency","currency","localStorage","setItem","JSON","stringify","type","payload","CurrencyValue","value","prev","code","currencyDiff","toFixed","toLowerCase","className","styles","bad","good","CurrencyList","dispatch","useDispatch","currencyList","useSelector","store","currencyReducer","favoriteCurrency","favoriteCurrencyReducer","TableContainer","component","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","filter","CharCode","sort","a","list","includes","ID","map","multiply","curValue","Value","Nominal","curPrev","Previous","currencyRow","key","NumCode","Name","FormControlLabel","control","Checkbox","onChange","id","favoriteList","parse","getItem","index","indexOf","item","concat","changeFavoriteCurrency","checked","icon","checkedIcon","name","label","changeMainCurrency","changeBothCurrency","changeSecondCurrency","FavoriteCurrency","setFavoriteHandler","evt","favorite","target","style","container","text","FormControl","Select","length","displayEmpty","inputProps","MenuItem","CurrencyConvertorPage","NUMBER_REGEXP","ExchangeInput","changeHandler","readOnly","TextField","input","InputProps","fontSize","min","fullWidth","test","changeInputValidation","InputLabelProps","shrink","variant","defaultProps","ExchangeSelectCurrency","activeCur","changeCur","useState","isOpen","setOpen","popupRef","useRef","selectedIndex","setSelectedIndex","sorted","useMemo","slice","b","handlePopupClose","current","contains","ButtonGroup","size","buttons","color","button","Button","onClick","ref","prevOpen","Popper","open","anchorEl","role","undefined","transition","zIndex","TransitionProps","placement","Grow","transformOrigin","elevation","ClickAwayListener","onClickAway","MenuList","maxHeight","overflow","selected","handlePopupItemClick","ExchangeBlock","inputValue","inputValueHandler","ExchangeRatePage","exchangeCurrencyReducer","fromValue","changeFromValue","toValue","changeToValue","useEffect","rate","mainCurrency","secondCurrency","ErrorPage","links","path","App","location","useLocation","fetch","then","response","json","Object","values","Valute","StylesProvider","injectFirst","pathname","NavLink","to","exact","initialState","initialCurrency","combineReducers","state","action","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById","module","exports"],"mappings":"gZAEaA,EAAsB,SAACC,GAGlC,OAFAC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUJ,IAE7C,CACLK,KCNwB,eDOxBC,QAASN,I,iBEHN,SAASO,EAAT,GAA+C,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACrCC,EAAeH,EAAQC,EAE7B,OACE,wCACMD,EAAMI,QAAQ,GADpB,YAC0BF,EAAKG,cAD/B,KAEE,0BAAMC,UAAWH,GAAgB,EAAII,IAAOC,IAAMD,IAAOE,MAAzD,KACKN,EAAaC,QAAQ,GAD1B,OCKC,SAASM,IACd,IAAMC,EAAWC,cACXC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,mBAC5CC,EAAmBH,aAAY,SAACC,GAAD,OAAWA,EAAMG,2BAmBtD,OACE,kBAACC,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACC,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,gBAC7B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,QAAjB,gBACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,gDACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,wCACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,0DACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,4DAGJ,kBAACC,EAAA,EAAD,KACGhB,EACEiB,QAAO,SAACtC,GAAD,OAAcA,EAASuC,WAAad,EAAiBzB,SAASuC,YACrEC,MAAK,SAACC,GAAD,OAAQhB,EAAiBiB,KAAKC,SAASF,EAAEG,KAAO,EAAI,KAAIC,KAhC9C,SAAC7C,GAMzB,IALA,IAAI8C,EAAW,EACTC,EAAc/C,EAASgD,MAAQvB,EAAiBzB,SAASgD,MAAShD,EAASiD,QAC5DxB,EAAiBzB,SAASiD,QACzCC,EAAalD,EAASmD,SAAW1B,EAAiBzB,SAASmD,SAAYnD,EAASiD,QACjExB,EAAiBzB,SAASiD,QACvCF,EAAWD,EAAY,GAC7BA,GAAY,GAEd,OAAO,2BACF9C,GADL,IAEEiD,QAAS,EAAIH,EACbE,MAAOD,EAAWD,EAClBK,SAAUD,EAAUJ,OAoBbD,KAAI,SAACO,GAAD,OACL,kBAAClB,EAAA,EAAD,CAAUmB,IAAKD,EAAYE,SACzB,kBAACnB,EAAA,EAAD,CAAWC,MAAM,QAAQgB,EAAYH,SACrC,kBAACd,EAAA,EAAD,CAAWC,MAAM,QAAQgB,EAAYb,UACrC,kBAACJ,EAAA,EAAD,CAAWC,MAAM,QAAQgB,EAAYG,MACrC,kBAACpB,EAAA,EAAD,CAAWC,MAAM,QACf,kBAAC7B,EAAD,CACCE,KAAM2C,EAAYD,SAClB3C,MAAO4C,EAAYJ,MACnBtC,KAAMe,EAAiBzB,SAASuC,YAGnC,kBAACJ,EAAA,EAAD,CAAWC,MAAM,UACf,kBAACoB,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACIC,SAAU,kBAAMxC,EH1DF,SAACyC,GACrC,IAAIC,EAAe1D,KAAK2D,MAAM7D,aAAa8D,QAAQ,eAAiB,GAC9DC,EAAQH,EAAaI,QAAQL,GASnC,OAPEC,EADEG,GAAS,EACIH,EAAavB,QAAO,SAAC4B,GAAD,OAAUA,IAASN,KAEvCC,EAAaM,OAAOP,GAGrC3D,aAAaC,QAAQ,YAAaC,KAAKC,UAAUyD,IAE1C,CACLxD,KCtBgC,uBDuBhCC,QAASuD,GG6CoCO,CAAuBhB,EAAYR,MAC5DyB,QAAS5C,EAAiBiB,KAAKC,SAASS,EAAYR,IACpD0B,KAAM,kBAAC,IAAD,MACNC,YAAa,kBAAC,IAAD,MACbC,KAAMpB,EAAYb,SAClBkC,MAAOrB,EAAYb,qB,wDCxE9BmC,EAAqB,SAAC1E,GAAD,MAAe,CAC/CK,KCH6B,kBDI7BC,QAASN,IAGE2E,EAAqB,SAAC3E,GAAD,MAAe,CAC/CK,KCN6B,kBDO7BC,QAASN,IAGE4E,EAAuB,SAAC5E,GAAD,MAAe,CACjDK,KCZ+B,oBDa/BC,QAASN,IELJ,SAAS6E,IACd,IAAM1D,EAAWC,cACXpB,EAAWsB,aAAY,SAACC,GAAD,OAAWA,EAAMC,mBACxCC,EAAmBH,aAAY,SAACC,GAAD,OAAWA,EAAMG,2BAEhDoD,EAAqB,SAACC,GAC1B,IAAMC,EAAWhF,EAASsC,QAAO,SAAC4B,GAAD,OAC/BA,EAAK3B,WAAawC,EAAIE,OAAOzE,SAE/BW,EAASpB,EAAmB,WAAnB,cAAuBiF,KAChC7D,EAASwD,EAAkB,WAAlB,cAAsBK,MAGjC,OACE,yBAAKlE,UAAWoE,IAAMC,WACpB,uBAAGrE,UAAWoE,IAAME,MAApB,uFACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACI9E,MAAOR,EAASuF,OAAS,EAAI9D,EAAiBzB,SAASuC,SAAW,GAClEoB,SAAU,SAACoB,GAAD,OAASD,EAAmBC,IACtCS,cAAY,EACZC,WAAY,CAAE,aAAc,kBAE3BzF,EAAS6C,KAAI,SAACqB,GAAD,OACZ,kBAACwB,EAAA,EAAD,CAAUrC,IAAKa,EAAKZ,QAAS9C,MAAO0D,EAAK3B,UAAW2B,EAAKX,YC7BhE,SAASoC,IACd,OACE,oCACE,kBAACd,EAAD,MACA,kBAAC3D,EAAD,O,yFCHA0E,EAAgB,qBAEf,SAASC,GAAT,GAEH,IADFrF,EACC,EADDA,MAAOsF,EACN,EADMA,cAAeC,EACrB,EADqBA,SAAUvB,EAC/B,EAD+BA,KAUhC,OACE,oCACE,kBAACwB,EAAA,EAAD,CACElF,UAAWC,IAAOkF,MAClBC,WAAY,CACVhB,MAAO,CAAEiB,SAAU,IACnBV,WAAY,CAAEW,IAAK,GACnBL,YAEFM,WAAS,EACT7F,MAAOA,EACPmD,SAAU,SAACoB,GAAD,OAlBc,SAACvE,GACzBoF,EAAcU,KAAK9F,IACrBsF,EAActF,GAgBO+F,CAAsBxB,EAAIE,OAAOzE,QACpDiE,MAAOD,EACPnE,KAAK,SACLmG,gBAAiB,CACfC,QAAQ,GAEVC,QAAQ,aAhBZ,gGA8BJb,GAAcc,aAAe,CAC3Bb,cAAe,aACfC,UAAU,G,wGClCL,SAASa,GAAT,GAA2D,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,UAAa,EACrCC,oBAAS,GAD4B,mBACxDC,EADwD,KAChDC,EADgD,KAEzD5F,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,mBAC5CC,EAAmBH,aAAY,SAACC,GAAD,OAAWA,EAAMG,2BAChDwF,EAAWC,iBAAO,MAClBhG,EAAWC,cAL8C,EAMrB2F,mBAAS,GANY,mBAMxDK,EANwD,KAMzCC,EANyC,KAQzDC,EAASC,mBAAQ,kBAAMlG,EAAamG,QAAQhF,MAAK,SAACC,EAAGgF,GACzD,OAAIhF,EAAEG,KAAOnB,EAAiBzB,SAAS4C,IAAY,EAC/C6E,EAAE7E,KAAOnB,EAAiBzB,SAAS4C,GAAW,EAC9CnB,EAAiBiB,KAAKC,SAASF,EAAEG,IAAMnB,EAAiBiB,KAAKC,SAAS8E,EAAE7E,KAAa,EAClF,OACL,CAACvB,EAAcI,IAMbiG,EAAmB,SAAC3C,GACpBmC,EAASS,SAAWT,EAASS,QAAQC,SAAS7C,EAAIE,SAItDgC,GAAQ,IAUV,OACE,oCACA,kBAACY,EAAA,EAAD,CACEC,KAAK,QACLhH,UAAWC,KAAOgH,QAClBC,MAAM,UACNhG,aAAW,WAEVsF,EAAOE,MAAM,EA5CE,GA4CgB3E,KAAI,SAACoF,GAAD,OAClC,kBAACC,EAAA,EAAD,CACEC,QAAS,WACPhH,EAAS2F,EAAUmB,KAErB5E,IAAK4E,EAAOrF,GACZ8D,QAASuB,EAAOrF,KAAOiE,EAAUjE,GAAK,YAAc,GACpD9B,UAAWC,KAAOkH,QAEjBA,EAAO1F,aAGZ,kBAAC2F,EAAA,EAAD,CACEC,QAAS,WACPhH,EAAS2F,EAAUQ,EAAOF,MAE5BV,QAASY,EAAOF,IAAkBE,EAAOF,GAAexE,KAAOiE,EAAUjE,GAAK,YAAc,GAC5F9B,UAAWC,KAAOkH,QAEjBX,EAAO/B,OAAS,GAAK+B,EAAOF,GAAe7E,UAE9C,kBAAC2F,EAAA,EAAD,CACEE,IAAKlB,EACLiB,QAlDoB,WACxBlB,GAAQ,SAACoB,GAAD,OAAeA,OAmDlBrB,EAAS,kBAAC,KAAD,MAAsB,kBAAC,KAAD,QAGpC,kBAACsB,GAAA,EAAD,CACEC,KAAMvB,EACNwB,SAAUtB,EAASS,QACnBc,UAAMC,EACNC,YAAU,EACVzD,MAAO,CAAE0D,OAAQ,KAEhB,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,kBAACC,GAAA,EAAD,iBACMF,EADN,CAEE3D,MAAO,CACL8D,gBAA+B,WAAdF,EAAyB,aAAe,mBAG5D,kBAACjH,EAAA,EAAD,CAAOoH,UAAW,GACjB,kBAACC,GAAA,EAAD,CAAmBC,YAAazB,GAC9B,kBAAC0B,GAAA,EAAD,CACElE,MAAO,CAAEmE,UAAW,IAAKC,SAAU,SAEnChC,EAAOE,MA3FC,GA2FoB3E,KAAI,SAACqB,EAAMF,GAAP,OAC9B,kBAAC0B,EAAA,EAAD,CACErC,IAAKa,EAAKtB,GACV2G,SAAUrF,EAAKtB,KAAO0E,EAAOF,GAAexE,GAC5CuF,QAAS,kBAlEI,SAACnE,GAC5BqD,EAAiBrD,GACjB7C,EAAS2F,EAAUQ,EAAOtD,KAE1BiD,GAAQ,GA8DqBuC,CAAqBxF,EA/FhC,KAiGHE,EAAKX,iBC1GjB,SAASkG,GAAT,GAEH,IADFC,EACC,EADDA,WAAYC,EACX,EADWA,kBAAmB5D,EAC9B,EAD8BA,SAAUvB,EACxC,EADwCA,KAAMqC,EAC9C,EAD8CA,UAAWC,EACzD,EADyDA,UAE1D,OACE,yBAAKhG,UAAWC,IAAOoE,WACrB,kBAACyB,GAAD,CACEC,UAAWA,EACXC,UAAWA,IAGb,kBAACjB,GAAD,CACErB,KAAMA,EACNhE,MAAOkJ,EACP5D,cAAe6D,EACf5D,SAAUA,KCdX,SAAS6D,KACd,IAAMzI,EAAWC,cACXpB,EAAWsB,aAAY,SAACC,GAAD,OAAWA,EAAMsI,2BACxCpI,EAAmBH,aAAY,SAACC,GAAD,OAAWA,EAAMG,wBAAwB1B,YAH7C,EAII+G,mBAAS,KAJb,mBAI1B+C,EAJ0B,KAIfC,EAJe,OAKAhD,mBAAS,KALT,mBAK1BiD,EAL0B,KAKjBC,EALiB,KAoBjC,OAbAC,qBAAU,WACR,IAAMC,EAAUnK,EAASoK,aAAapH,MAAQhD,EAASqK,eAAerH,MACxDhD,EAASoK,aAAanH,QAAWjD,EAASqK,eAAepH,QACzD6G,EAEdG,EAAcE,EAAKvJ,QAAQ,MAC1B,CAACkJ,EAAW9J,EAASoK,aAAapH,MAAOhD,EAASqK,eAAerH,MAClEhD,EAASoK,aAAanH,QAASjD,EAASqK,eAAepH,UAEzDiH,qBAAU,WACR/I,EAASwD,EAAmBlD,MAC3B,CAACA,EAAkBN,IAGpB,yBAAKL,UAAWC,IAAOoE,WACrB,kBAACsE,GAAD,CACEC,WAAYI,EACZH,kBAAmBI,EACnBvF,KAAK,6CACLqC,UAAW7G,EAASoK,aACpBtD,UAAWpC,IAEb,kBAAC+E,GAAD,CACEC,WAAYM,EACZjE,UAAQ,EACRc,UAAW7G,EAASqK,eACpB7F,KAAK,yDACLsC,UAAWlC,KCtCZ,SAAS0F,KACd,OACE,qiBFuCJb,GAAc9C,aAAe,CAC3BgD,kBAAmB,aACnB5D,UAAU,GG/BZ,IAAMwE,GAAQ,CACZ,CACE/F,KAAM,0DACNgG,KAAM,KAER,CACEhG,KAAM,oGACNgG,KAAM,UA8CKC,OA1Cf,WACE,IAAMC,EAAWC,cAEXxJ,EAAWC,cAMjB,OAJA8I,qBAAU,WACR/I,GCxBiC,SAACA,GACpCyJ,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC3G,GAAD,OAAU/C,EARuB,CACzCd,KCH0B,eDI1BC,QAOoB0K,OAAOC,OAAO/G,EAAKgH,kBDqBpC,CAAC/J,IAGF,kBAACgK,EAAA,EAAD,CAAgBC,aAAW,GACzB,yBAAKtK,UAAWC,IAAOoE,WACrB,kBAAC0C,EAAA,EAAD,CAAa/G,UAAWC,IAAOgH,QAASD,KAAK,QAAQE,MAAM,UAAUhG,aAAW,uCAC7EuI,GAAM1H,KAAI,SAACoF,GAAD,OACT,kBAACC,EAAA,EAAD,CACExB,QAASuB,EAAOuC,OAASE,EAASW,SAAW,YAAc,GAC3DvK,UAAWC,IAAOkH,OAClB5E,IAAK4E,EAAOuC,KACZ5I,UAAW0J,IACXC,GAAItD,EAAOuC,MAEVvC,EAAOzD,UAKd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgH,OAAK,EAAChB,KAAK,KACjB,kBAAC7E,EAAD,OAED,kBAAC,IAAD,CAAO6F,OAAK,EAAChB,KAAK,SAChB,kBAACZ,GAAD,OAEF,kBAAC,IAAD,CAAOY,KAAK,KACV,kBAACF,GAAD,W,2BGzDNmB,GAAe,CAAC,CACpB7I,GAAI,MACJU,QAAS,MACTf,SAAU,MACVU,QAAS,EACTM,KAAM,8FACNP,MAAO,EACPG,SAAU,ICGNsI,GAAe,CACnBzL,SAXsBG,KAAK2D,MAAM7D,aAAa8D,QAAQ,kBAAoB,CAC1EnB,GAAI,MACJU,QAAS,MACTf,SAAU,MACVU,QAAS,EACTM,KAAM,8FACNP,MAAO,EACPG,SAAU,GAKVT,KAAMvC,KAAK2D,MAAM7D,aAAa8D,QAAQ,eAAiB,ICZnD2H,GAAkBvL,KAAK2D,MAAM7D,aAAa8D,QAAQ,kBAAoB,CAC1EnB,GAAI,MACJU,QAAS,MACTf,SAAU,MACVU,QAAS,EACTM,KAAM,8FACNP,MAAO,EACPG,SAAU,GAGNsI,GAAe,CACnBrB,aAAcsB,GACdrB,eAAgBqB,ICTHC,8BAAgB,CAC7BnK,gBHM6B,WAAmC,IAAlCoK,EAAiC,uDAAzBH,GAAcI,EAAW,uCAC/D,OAAQA,EAAOxL,MACb,IDdwB,eCetB,MAAM,GAAN,mBAAWuL,GAAX,YAAqBC,EAAOvL,UAC9B,QACE,OAAOsL,IGVXlK,wBFUqC,WAAmC,IAAlCkK,EAAiC,uDAAzBH,GAAcI,EAAW,uCACvE,OAAQA,EAAOxL,MACb,IhBnBwB,egBoBtB,OAAO,2BAAKuL,GAAZ,IAAmB5L,SAAU6L,EAAOvL,UACtC,IhBpBgC,uBgBqB9B,OAAO,2BAAKsL,GAAZ,IAAmBlJ,KAAMmJ,EAAOvL,UAClC,QACE,OAAOsL,IEhBX/B,wBDSqC,WAAmC,IAAlC+B,EAAiC,uDAAzBH,GAAcI,EAAW,uCACvE,OAAQA,EAAOxL,MACb,IbnB2B,kBaoBzB,OAAO,2BAAKuL,GAAZ,IAAmBxB,aAAcyB,EAAOvL,UAC1C,IbpB6B,oBaqB3B,OAAO,2BAAKsL,GAAZ,IAAmBvB,eAAgBwB,EAAOvL,UAC5C,IbrB2B,kBasBzB,OAAO,2BAAKsL,GAAZ,IAAmBxB,aAAcyB,EAAOvL,QAAS+J,eAAgBwB,EAAOvL,UAC1E,QACE,OAAOsL,MEdErK,GAPDuK,uBACZC,GACAC,+BACEC,2BAAgBC,QCApBC,IAASC,OACP,kBAAC,IAAD,CAAU7K,MAAOA,IACf,kBAAC,IAAD,CAAe8K,SAAS,kBACtB,kBAAC,GAAD,QAGJC,SAASC,eAAe,U,mBCb1BC,EAAOC,QAAU,CAAC,UAAY,uBAAuB,QAAU,qBAAqB,OAAS,sB,mBCA7FD,EAAOC,QAAU,CAAC,QAAU,wCAAwC,OAAS,yC,mBCA7ED,EAAOC,QAAU,CAAC,KAAO,4BAA4B,IAAM,6B,mBCA3DD,EAAOC,QAAU,CAAC,UAAY,oCAAoC,KAAO,iC,mBCAzED,EAAOC,QAAU,CAAC,UAAY,sC,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,mC,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,gC","file":"static/js/main.8113b08d.chunk.js","sourcesContent":["import { SET_FAVORITE, CHANGE_FAVORITE_LIST } from './types';\n\nexport const setFavoriteCurrency = (currency) => {\n  localStorage.setItem('favoritesCur', JSON.stringify(currency));\n\n  return {\n    type: SET_FAVORITE,\n    payload: currency,\n  };\n};\n\nexport const changeFavoriteCurrency = (id) => {\n  let favoriteList = JSON.parse(localStorage.getItem('favorites')) || [];\n  const index = favoriteList.indexOf(id);\n  if (index >= 0) {\n    favoriteList = favoriteList.filter((item) => item !== id);\n  } else {\n    favoriteList = favoriteList.concat(id);\n  }\n\n  localStorage.setItem('favorites', JSON.stringify(favoriteList));\n\n  return {\n    type: CHANGE_FAVORITE_LIST,\n    payload: favoriteList,\n  };\n};\n","export const SET_FAVORITE = \"SET_FAVORITE\";\nexport const CHANGE_FAVORITE_LIST = \"CHANGE_FAVORITE_LIST\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './CurrencyValue.module.css';\n\nexport function CurrencyValue({ value, prev, code }) {\n  const currencyDiff = value - prev;\n\n  return (\n    <span>\n      {`${value.toFixed(2)} ${code.toLowerCase()} `}\n      <span className={currencyDiff >= 0 ? styles.bad : styles.good}>\n        ( {currencyDiff.toFixed(3)} )\n      </span>\n    </span>\n  );\n}\n\nCurrencyValue.propTypes = {\n  value: PropTypes.number.isRequired,\n  prev: PropTypes.number.isRequired,\n  code: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport { changeFavoriteCurrency } from '../../redux/favoriteCurrency/action';\nimport { CurrencyValue } from '../../componentsHelper/CurrencyValue/CurrencyValue';\n\nexport function CurrencyList() {\n  const dispatch = useDispatch();\n  const currencyList = useSelector((store) => store.currencyReducer);\n  const favoriteCurrency = useSelector((store) => store.favoriteCurrencyReducer);\n\n  const calculateCurrency = (currency) => {\n    let multiply = 1;\n    const curValue = (((currency.Value / favoriteCurrency.currency.Value) / currency.Nominal)\n                       * favoriteCurrency.currency.Nominal);\n    const curPrev = (((currency.Previous / favoriteCurrency.currency.Previous) / currency.Nominal)\n                       * favoriteCurrency.currency.Nominal);\n    while ((curValue * multiply) < 1) {\n      multiply *= 10;\n    }\n    return {\n      ...currency,\n      Nominal: 1 * multiply,\n      Value: curValue * multiply,\n      Previous: curPrev * multiply,\n    };\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table stickyHeader aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">За</TableCell>\n            <TableCell align=\"left\">Букв. код</TableCell>\n            <TableCell align=\"left\">Валюта</TableCell>\n            <TableCell align=\"left\">Получаешь</TableCell>\n            <TableCell align=\"left\">Избранная</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {currencyList\n            .filter((currency) => currency.CharCode !== favoriteCurrency.currency.CharCode)\n            .sort((a) => (favoriteCurrency.list.includes(a.ID) ? -1 : 1)).map(calculateCurrency)\n            .map((currencyRow) => (\n            <TableRow key={currencyRow.NumCode}>\n              <TableCell align=\"left\">{currencyRow.Nominal}</TableCell>\n              <TableCell align=\"left\">{currencyRow.CharCode}</TableCell>\n              <TableCell align=\"left\">{currencyRow.Name}</TableCell>\n              <TableCell align=\"left\">\n                <CurrencyValue\n                 prev={currencyRow.Previous}\n                 value={currencyRow.Value}\n                 code={favoriteCurrency.currency.CharCode}\n                />\n              </TableCell>\n              <TableCell align=\"center\">\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                        onChange={() => dispatch(changeFavoriteCurrency(currencyRow.ID))}\n                        checked={favoriteCurrency.list.includes(currencyRow.ID)}\n                        icon={<FavoriteBorder />}\n                        checkedIcon={<Favorite />}\n                        name={currencyRow.CharCode}\n                        label={currencyRow.CharCode}\n                    />\n                  }\n                />\n             </TableCell>\n            </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { CHANGE_MAIN_CUR, CHANGE_SECOND_CUR, CHANGE_BOTH_CUR } from './types';\n\nexport const changeMainCurrency = (currency) => ({\n  type: CHANGE_MAIN_CUR,\n  payload: currency,\n});\n\nexport const changeBothCurrency = (currency) => ({\n  type: CHANGE_BOTH_CUR,\n  payload: currency,\n});\n\nexport const changeSecondCurrency = (currency) => ({\n  type: CHANGE_SECOND_CUR,\n  payload: currency,\n});\n","export const CHANGE_MAIN_CUR = \"CHANGE_MAIN_CUR\";\nexport const CHANGE_SECOND_CUR = \"CHANGE_SECOND_CUR\";\nexport const CHANGE_BOTH_CUR = \"CHANGE_BOTH_CUR\";","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormControl } from '@material-ui/core';\nimport style from './FavoriteCurrency.module.css';\nimport { setFavoriteCurrency } from '../../redux/favoriteCurrency/action';\nimport { changeBothCurrency } from '../../redux/exchangeCurrency/actions';\n\nexport function FavoriteCurrency() {\n  const dispatch = useDispatch();\n  const currency = useSelector((store) => store.currencyReducer);\n  const favoriteCurrency = useSelector((store) => store.favoriteCurrencyReducer);\n\n  const setFavoriteHandler = (evt) => {\n    const favorite = currency.filter((item) => (\n      item.CharCode === evt.target.value\n    ));\n    dispatch(setFavoriteCurrency(...favorite));\n    dispatch(changeBothCurrency(...favorite));\n  };\n\n  return (\n    <div className={style.container}>\n      <p className={style.text}> Базовая валюта : </p>\n      <FormControl >\n        <Select\n            value={currency.length > 1 ? favoriteCurrency.currency.CharCode : ''}\n            onChange={(evt) => setFavoriteHandler(evt)}\n            displayEmpty\n            inputProps={{ 'aria-label': 'Without label' }}\n          >\n            {currency.map((item) => (\n              <MenuItem key={item.NumCode} value={item.CharCode}>{item.Name}</MenuItem>\n            ))}\n\n          </Select>\n        </FormControl>\n    </div>\n  );\n}\n","import React from 'react';\nimport { CurrencyList } from '../../components/CurrencyList/CurrencyList';\nimport { FavoriteCurrency } from '../../components/FavoriteCurrency/FavoriteCurrency';\n\nexport function CurrencyConvertorPage() {\n  return (\n    <>\n      <FavoriteCurrency />\n      <CurrencyList />\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './ExchangeInput.module.css';\n\nconst NUMBER_REGEXP = /^[0-9]*[.]?[0-9]*$/;\n\nexport function ExchangeInput({\n  value, changeHandler, readOnly, name,\n}) {\n  \n  const changeInputValidation = (value) => {\n    if (NUMBER_REGEXP.test(value)) {\n      changeHandler(value);\n    }\n  }\n\n\n  return (\n    <>\n      <TextField\n        className={styles.input}\n        InputProps={{\n          style: { fontSize: 40 },\n          inputProps: { min: 0 },\n          readOnly,\n        }}\n        fullWidth\n        value={value}\n        onChange={(evt) => changeInputValidation(evt.target.value)}\n        label={name}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        variant=\"outlined\"\n      />\n      Сюда потом допишу\n    </>\n  );\n}\n\nExchangeInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeHandler: PropTypes.func,\n  readOnly: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n};\n\nExchangeInput.defaultProps = {\n  changeHandler: () => {},\n  readOnly: false,\n};\n","import React, { useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './ExchangeSelectCurrency.module.css';\n\nconst BUTTONS_COUNT = 3;\n\nexport function ExchangeSelectCurrency({ activeCur, changeCur }) {\n  const [isOpen, setOpen] = useState(false);\n  const currencyList = useSelector((store) => store.currencyReducer);\n  const favoriteCurrency = useSelector((store) => store.favoriteCurrencyReducer);\n  const popupRef = useRef(null);\n  const dispatch = useDispatch();\n  const [selectedIndex, setSelectedIndex] = useState(3);\n\n  const sorted = useMemo(() => currencyList.slice().sort((a, b) => {\n    if (a.ID === favoriteCurrency.currency.ID) return -1;\n    if (b.ID === favoriteCurrency.currency.ID) return 1;\n    if (favoriteCurrency.list.includes(a.ID) > favoriteCurrency.list.includes(b.ID)) return -1;\n    return 1;\n  }), [currencyList, favoriteCurrency]);\n\n  const handlePopupToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handlePopupClose = (evt) => {\n    if (popupRef.current && popupRef.current.contains(evt.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handlePopupItemClick = (index) => {\n    setSelectedIndex(index);\n    dispatch(changeCur(sorted[index]));\n\n    setOpen(false);\n  };\n\n  return (\n    <>\n    <ButtonGroup\n      size=\"small\"\n      className={styles.buttons}\n      color=\"primary\"\n      aria-label=\"buttons\"\n    >\n      {sorted.slice(0, BUTTONS_COUNT).map((button) => (\n        <Button\n          onClick={() => {\n            dispatch(changeCur(button));\n          }}\n          key={button.ID}\n          variant={button.ID === activeCur.ID ? 'contained' : ''}\n          className={styles.button}\n        >\n          {button.CharCode}\n        </Button>\n      ))}\n      <Button\n        onClick={() => {\n          dispatch(changeCur(sorted[selectedIndex]));\n        }}\n        variant={sorted[selectedIndex] && sorted[selectedIndex].ID === activeCur.ID ? 'contained' : ''}\n        className={styles.button}\n      >\n        {sorted.length > 1 && sorted[selectedIndex].CharCode}\n      </Button>\n      <Button\n        ref={popupRef}\n        onClick={handlePopupToggle}\n      >\n        {isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n      </Button>\n    </ButtonGroup>\n    <Popper\n      open={isOpen}\n      anchorEl={popupRef.current}\n      role={undefined}\n      transition\n      style={{ zIndex: 2 }}\n    >\n      {({ TransitionProps, placement }) => (\n        <Grow\n          {...TransitionProps}\n          style={{\n            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n          }}\n        >\n         <Paper elevation={3}>\n          <ClickAwayListener onClickAway={handlePopupClose}>\n            <MenuList\n              style={{ maxHeight: 450, overflow: 'auto' }}\n            >\n             {sorted.slice(BUTTONS_COUNT).map((item, index) => (\n                <MenuItem\n                  key={item.ID}\n                  selected={item.ID === sorted[selectedIndex].ID}\n                  onClick={() => handlePopupItemClick(index + BUTTONS_COUNT)}\n                >\n                  {item.Name}\n                </MenuItem>\n             ))}\n            </MenuList>\n          </ClickAwayListener>\n         </Paper>\n        </Grow>\n      )}\n    </Popper>\n    </>\n  );\n}\n\nExchangeSelectCurrency.propTypes = {\n  activeCur: PropTypes.shape({\n    CharCode: PropTypes.string.isRequired,\n    ID: PropTypes.string.isRequired,\n    Name: PropTypes.string.isRequired,\n    Nominal: PropTypes.number.isRequired,\n    NumCode: PropTypes.string.isRequired,\n    Previous: PropTypes.number.isRequired,\n    Value: PropTypes.number.isRequired,\n  }).isRequired,\n  changeCur: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ExchangeBlock.module.css';\nimport { ExchangeInput } from '../ExchangeInput/ExchangeInput';\nimport { ExchangeSelectCurrency } from '../ExchangeSelectCurrency/ExchangeSelectCurrency';\n\nexport function ExchangeBlock({\n  inputValue, inputValueHandler, readOnly, name, activeCur, changeCur,\n}) {\n  return (\n    <div className={styles.container}>\n      <ExchangeSelectCurrency\n        activeCur={activeCur}\n        changeCur={changeCur}\n      />\n\n      <ExchangeInput\n        name={name}\n        value={inputValue}\n        changeHandler={inputValueHandler}\n        readOnly={readOnly}\n      />\n    </div>\n  );\n}\n\nExchangeBlock.propTypes = {\n  inputValue: PropTypes.string.isRequired,\n  inputValueHandler: PropTypes.func,\n  readOnly: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  activeCur: PropTypes.shape({\n    CharCode: PropTypes.string.isRequired,\n    ID: PropTypes.string.isRequired,\n    Name: PropTypes.string.isRequired,\n    Nominal: PropTypes.number.isRequired,\n    NumCode: PropTypes.string.isRequired,\n    Previous: PropTypes.number.isRequired,\n    Value: PropTypes.number.isRequired,\n  }).isRequired,\n  changeCur: PropTypes.func.isRequired,\n};\n\nExchangeBlock.defaultProps = {\n  inputValueHandler: () => {},\n  readOnly: false,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './ExchangeRatePage.module.css';\nimport { ExchangeBlock } from '../../components/ExchangeBlock/ExchangeBlock';\nimport { changeMainCurrency, changeSecondCurrency, changeBothCurrency } from '../../redux/exchangeCurrency/actions';\n\nexport function ExchangeRatePage() {\n  const dispatch = useDispatch();\n  const currency = useSelector((store) => store.exchangeCurrencyReducer);\n  const favoriteCurrency = useSelector((store) => store.favoriteCurrencyReducer.currency);\n  const [fromValue, changeFromValue] = useState(\"0\");\n  const [toValue, changeToValue] = useState(\"0\");\n\n  useEffect(() => {\n    const rate = (((currency.mainCurrency.Value / currency.secondCurrency.Value)\n                / currency.mainCurrency.Nominal) * currency.secondCurrency.Nominal)\n                * fromValue;\n\n    changeToValue(rate.toFixed(2));\n  }, [fromValue, currency.mainCurrency.Value, currency.secondCurrency.Value,\n    currency.mainCurrency.Nominal, currency.secondCurrency.Nominal]);\n\n  useEffect(() => {\n    dispatch(changeBothCurrency(favoriteCurrency));\n  }, [favoriteCurrency, dispatch]);\n\n  return (\n    <div className={styles.container}>\n      <ExchangeBlock\n        inputValue={fromValue}\n        inputValueHandler={changeFromValue}\n        name=\"Отдаешь\"\n        activeCur={currency.mainCurrency}\n        changeCur={changeMainCurrency}\n      />\n      <ExchangeBlock\n        inputValue={toValue}\n        readOnly\n        activeCur={currency.secondCurrency}\n        name=\"Получаешь\"\n        changeCur={changeSecondCurrency}\n      />\n\n    </div>\n  );\n}\n","import React from 'react';\n\nexport function ErrorPage() {\n  return (\n    <div>\n      Ошибка.\n      Нажмите на одну из кнопок сверху, для того что-бы перейти в соотвествующий раздел приложения.\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport {\n  Switch, NavLink, Route, useLocation,\n} from 'react-router-dom';\nimport { getCurrencyList } from './redux/Currency/action';\nimport { CurrencyConvertorPage } from './pages/CurrencyConvertorPage/CurrencyConvertorPage';\nimport styles from './App.module.css';\nimport { ExchangeRatePage } from './pages/ExchangeRatePage/ExchangeRatePage';\nimport { ErrorPage } from './pages/ErrorPage/ErrorPage';\n\nconst links = [\n  {\n    name: 'Курс валют',\n    path: '/',\n  },\n  {\n    name: 'Калькулятор валют',\n    path: '/calc',\n  },\n];\n\nfunction App() {\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrencyList());\n  }, [dispatch]);\n\n  return (\n    <StylesProvider injectFirst>\n      <div className={styles.container}>\n        <ButtonGroup className={styles.buttons} size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\">\n          {links.map((button) => (\n            <Button\n              variant={button.path === location.pathname ? 'contained' : ''}\n              className={styles.button}\n              key={button.path}\n              component={NavLink}\n              to={button.path}\n            >\n              {button.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n\n        <Switch>\n          <Route exact path=\"/\">\n           <CurrencyConvertorPage />\n          </Route>\n          <Route exact path=\"/calc\">\n            <ExchangeRatePage />\n          </Route>\n          <Route path=\"*\">\n            <ErrorPage />\n          </Route>\n        </Switch>\n      </div>\n    </StylesProvider>\n  );\n}\n\nexport default App;\n","import { GET_CURRENCY } from './types';\n\nconst setCurrencyList = (currencyList) => ({\n  type: GET_CURRENCY,\n  payload: currencyList,\n});\n\nexport const getCurrencyList = () => (dispatch) => {\n  fetch('https://www.cbr-xml-daily.ru/daily_json.js')\n    .then((response) => response.json())\n    .then((item) => dispatch(\n      setCurrencyList(Object.values(item.Valute)),\n    ));\n};\n","export const GET_CURRENCY = \"GET_CURRENCY\";\n","import { GET_CURRENCY } from './types';\n\nconst initialState = [{\n  ID: 'R01',\n  NumCode: '643',\n  CharCode: 'RUB',\n  Nominal: 1,\n  Name: 'Российский рубль',\n  Value: 1.0,\n  Previous: 1.0,\n}];\n\nexport const currencyReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CURRENCY:\n      return [...state, ...action.payload];\n    default:\n      return state;\n  }\n};\n","import { SET_FAVORITE, CHANGE_FAVORITE_LIST } from './types';\n\nconst initialCurrency = JSON.parse(localStorage.getItem('favoritesCur')) || {\n  ID: 'R01',\n  NumCode: '643',\n  CharCode: 'RUB',\n  Nominal: 1,\n  Name: 'Российский рубль',\n  Value: 1.00,\n  Previous: 1.00,\n};\n\nconst initialState = {\n  currency: initialCurrency,\n  list: JSON.parse(localStorage.getItem('favorites')) || [],\n};\n\nexport const favoriteCurrencyReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FAVORITE:\n      return { ...state, currency: action.payload };\n    case CHANGE_FAVORITE_LIST:\n      return { ...state, list: action.payload };\n    default:\n      return state;\n  }\n};\n","import { CHANGE_MAIN_CUR, CHANGE_SECOND_CUR, CHANGE_BOTH_CUR } from './types';\n\nconst initialCurrency = JSON.parse(localStorage.getItem('favoritesCur')) || {\n  ID: 'R01',\n  NumCode: '643',\n  CharCode: 'RUB',\n  Nominal: 1,\n  Name: 'Российский рубль',\n  Value: 1.00,\n  Previous: 1.00,\n};\n\nconst initialState = {\n  mainCurrency: initialCurrency,\n  secondCurrency: initialCurrency,\n};\n\nexport const exchangeCurrencyReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_MAIN_CUR:\n      return { ...state, mainCurrency: action.payload };\n    case CHANGE_SECOND_CUR:\n      return { ...state, secondCurrency: action.payload };\n    case CHANGE_BOTH_CUR:\n      return { ...state, mainCurrency: action.payload, secondCurrency: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { currencyReducer } from \"./Currency/reducer.js\";\nimport { favoriteCurrencyReducer } from \"./favoriteCurrency/reducer.js\";\nimport { exchangeCurrencyReducer } from \"./exchangeCurrency/reducer.js\";\n\nexport default combineReducers({\n  currencyReducer,\n  favoriteCurrencyReducer,\n  exchangeCurrencyReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/ExchangeRates\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3GxY8\",\"buttons\":\"App_buttons__1ox0X\",\"button\":\"App_button__3Bpiw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"ExchangeSelectCurrency_buttons__2oYZr\",\"button\":\"ExchangeSelectCurrency_button__35tmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"CurrencyValue_good__3gLu_\",\"bad\":\"CurrencyValue_bad__1y713\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FavoriteCurrency_container__GHBPm\",\"text\":\"FavoriteCurrency_text__1IoX4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ExchangeRatePage_container__1deNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ExchangeBlock_container__11n25\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ExchangeInput_input__2CTM6\"};"],"sourceRoot":""}